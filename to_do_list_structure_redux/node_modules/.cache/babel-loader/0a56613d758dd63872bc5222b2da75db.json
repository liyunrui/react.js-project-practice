{"ast":null,"code":"import _slicedToArray from \"/Users/yunrui.li/Desktop/reacjs_from_scratch/to_do_list_structure/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/yunrui.li/Desktop/reacjs_from_scratch/to_do_list_structure/src/views/App.js\";\nimport React, { useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Button, Input, Checkbox } from 'antd';\nimport TodoForm from '../components/TodoForm/TodoForm.js';\nimport TodoFooter from '../components/TodoList/Todofooter.js';\nimport TodoItem from '../components/TodoList/TodoItem.js';\n\nfunction App() {\n  // mock object  [\n  //   {description:'xxx',done:false},\n  //   {description:'xxx2',done:true},\n  //   {description:'xxx3',done:false}\n  // ]\n  // step1: initilize all states we need:\n  // 1. todes --> array\n  // 2.\n  // 3. notDoneCount --> int\n  const _useState = useState( // default of tods is an empty array\n  // Later, we will push the object into todos.\n  [// {description:'xxx',done:false},\n    // {description:'xxx2',done:false},\n    // {description:'xxx3',done:false}\n  ]),\n        _useState2 = _slicedToArray(_useState, 2),\n        todos = _useState2[0],\n        setTodos = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        input = _useState4[0],\n        setInput = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        notDoneCount = _useState6[0],\n        setNotDoneCount = _useState6[1]; // step2: defien the function we nedd \n\n\n  const check = todoId => {\n    // check --> 打勾 server\n    // copy array\n    const newTodos = [...todos]; // update conetent of array\n\n    newTodos[todoId].done = newTodos[todoId].done ? false : true; // update count\n\n    if (newTodos[todoId].done) {\n      setNotDoneCount(notDoneCount - 1);\n    } else {\n      setNotDoneCount(notDoneCount + 1);\n    }\n\n    setTodos(newTodos);\n  };\n\n  const todoNewInput = e => {\n    // get input (task) from user\n    setInput(e.target.value);\n  };\n\n  const add = () => {\n    // add new task into todos array\n    const newTodos = [...todos];\n    const coentent_of_todo = {\n      description: input,\n      done: false\n    };\n    newTodos.push(coentent_of_todo);\n    setTodos(newTodos); // improve user's ex\n\n    setInput('');\n    setNotDoneCount(notDoneCount + 1);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    style: {\n      marginTop: '50px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"React Todo List\"), todos.map((todo, index) => {\n    return React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      onChange: () => check(index),\n      type: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: todo.done ? {\n        textDecoration: 'line-through',\n        display: 'inline'\n      } : {\n        display: 'inline'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, todo.description));\n  }), React.createElement(TodoFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(TodoForm, {\n    inputProps: input,\n    addProps: add,\n    todoNewInputProps: todoNewInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/yunrui.li/Desktop/reacjs_from_scratch/to_do_list_structure/src/views/App.js"],"names":["React","useState","Button","Input","Checkbox","TodoForm","TodoFooter","TodoItem","App","todos","setTodos","input","setInput","notDoneCount","setNotDoneCount","check","todoId","newTodos","done","todoNewInput","e","target","value","add","coentent_of_todo","description","push","marginTop","map","todo","index","textDecoration","display"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Button,Input,Checkbox } from 'antd';\nimport TodoForm from '../components/TodoForm/TodoForm.js'\nimport TodoFooter from '../components/TodoList/Todofooter.js'\nimport TodoItem from '../components/TodoList/TodoItem.js'\n\nfunction App() {\n\n  // mock object  [\n  //   {description:'xxx',done:false},\n  //   {description:'xxx2',done:true},\n  //   {description:'xxx3',done:false}\n  // ]\n\n  // step1: initilize all states we need:\n  // 1. todes --> array\n  // 2.\n  // 3. notDoneCount --> int\n  const [todos,setTodos] = useState(\n    // default of tods is an empty array\n    // Later, we will push the object into todos.\n    [\n      // {description:'xxx',done:false},\n      // {description:'xxx2',done:false},\n      // {description:'xxx3',done:false}\n    ]\n  )\n\n  const [input,setInput] = useState('')\n  const [notDoneCount,setNotDoneCount] = useState(0)\n  // step2: defien the function we nedd \n  const check=(todoId)=>{\n    // check --> 打勾 server\n\n    // copy array\n    const newTodos = [...todos]\n    // update conetent of array\n    newTodos[todoId].done =  newTodos[todoId].done ? false:true\n    // update count\n    if(newTodos[todoId].done){\n      setNotDoneCount(notDoneCount-1)\n    }else{\n      setNotDoneCount(notDoneCount+1)\n    }\n    setTodos(newTodos)\n  }\n\n  const todoNewInput=(e)=>{\n    // get input (task) from user\n    setInput(e.target.value)\n  }\n\n  const add=()=>{\n    // add new task into todos array\n    const newTodos = [...todos]\n    const coentent_of_todo = {description:input,done:false}\n    newTodos.push(coentent_of_todo)\n    setTodos(newTodos)\n    // improve user's ex\n    setInput('')\n    setNotDoneCount(notDoneCount+1)\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 style={{marginTop:'50px'}}>React Todo List</h1>\n      {/* <input type=\"checkbox\"/>你好 */}\n      {\n        todos.map((todo,index)=>{\n        return(\n          <div key={index}>\n            {/* {利用html input 屬性裡面的type == checkbox, 讓他變成使用者可以打勾} */}\n            <Checkbox onChange={()=>check(index)} type=\"checkbox\"/>\n            <p style={todo.done?{textDecoration:'line-through', display: 'inline'}:{display: 'inline'}}>\n              {todo.description}\n            </p>\n          </div> )\n        })\n      }\n      <TodoFooter></TodoFooter>\n      {/* JSＸ的功能就是可以把import 的 function當作元件使用 */}\n      <TodoForm inputProps={input} addProps = {add} todoNewInputProps = {todoNewInput}/>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}