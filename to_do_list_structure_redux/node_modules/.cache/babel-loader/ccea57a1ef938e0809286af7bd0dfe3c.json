{"ast":null,"code":"import _objectSpread from \"/Users/yunrui.li/Desktop/reacjs_from_scratch/to_do_list_structure_redux/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { createStore } from 'redux'; // Step1: define reducer function and store（這是一個global state, 大家不會這樣稱呼）\n\nfunction reducer_function(state, action) {\n  switch (action.type) {\n    // action 有兩種: action.type和action.paylad\n    // defined an action type called ADD_NAME\n    case 'Change_NAME':\n      // update old state into new state through action\n      // store 是一個 state 裡面其中的 key叫做action, 可以有很多個keys\n      const update_change = action.payload.name;\n      return _objectSpread({}, state, {\n        store: update_change\n      });\n\n    default:\n      // if there is no any action type, we won't change state（kepp the same)\n      return state;\n  }\n} // Step2: 初始化store的state為空字串\n\n\nlet store = createStore(reducer_function, {\n  store: ''\n}); // Step3:make other js scrips to read this store (global state)\n\nexport default store;","map":{"version":3,"sources":["/Users/yunrui.li/Desktop/reacjs_from_scratch/to_do_list_structure_redux/src/store.js"],"names":["createStore","reducer_function","state","action","type","update_change","payload","name","store"],"mappings":";AAAA,SAASA,WAAT,QAA4B,OAA5B,C,CAGA;;AACA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiCC,MAAjC,EAAyC;AACvC,UAAQA,MAAM,CAACC,IAAf;AACM;AAEA;AACJ,SAAK,aAAL;AACI;AACA;AACA,YAAMC,aAAa,GAAGF,MAAM,CAACG,OAAP,CAAeC,IAArC;AACA,+BAAWL,KAAX;AAAiBM,QAAAA,KAAK,EAACH;AAAvB;;AACJ;AACI;AACA,aAAOH,KAAP;AAXN;AAaD,C,CAED;;;AACA,IAAIM,KAAK,GAAGR,WAAW,CAACC,gBAAD,EAAkB;AAACO,EAAAA,KAAK,EAAC;AAAP,CAAlB,CAAvB,C,CAEA;;AACA,eAAeA,KAAf","sourcesContent":["import { createStore } from 'redux'\n\n\n// Step1: define reducer function and store（這是一個global state, 大家不會這樣稱呼）\nfunction reducer_function(state, action) {\n  switch (action.type) {\n        // action 有兩種: action.type和action.paylad\n        \n        // defined an action type called ADD_NAME\n    case 'Change_NAME':\n        // update old state into new state through action\n        // store 是一個 state 裡面其中的 key叫做action, 可以有很多個keys\n        const update_change = action.payload.name\n        return {...state,store:update_change}\n    default:\n        // if there is no any action type, we won't change state（kepp the same)\n        return state\n  }\n}\n\n// Step2: 初始化store的state為空字串\nlet store = createStore(reducer_function,{store:''})\n\n// Step3:make other js scrips to read this store (global state)\nexport default store;"]},"metadata":{},"sourceType":"module"}